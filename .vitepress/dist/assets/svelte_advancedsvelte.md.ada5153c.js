import{_ as l,C as n,o as a,c as e,H as t,w as o,Q as p,k as c}from"./chunks/framework.a2ff2cdc.js";const f=JSON.parse('{"title":"Advanced Svelte","description":"","frontmatter":{},"headers":[],"relativePath":"svelte/advancedsvelte.md","filePath":"svelte/advancedsvelte.md"}'),r={name:"svelte/advancedsvelte.md"},E=c("img",{src:"https://i.imgur.com/tLjkD58.png"},null,-1),i=p(`<h1 id="advanced-svelte" tabindex="-1">Advanced Svelte <a class="header-anchor" href="#advanced-svelte" aria-label="Permalink to &quot;Advanced Svelte&quot;">​</a></h1><h2 id="component-directives" tabindex="-1">Component Directives <a class="header-anchor" href="#component-directives" aria-label="Permalink to &quot;Component Directives&quot;">​</a></h2><h3 id="on-eventname-handler" tabindex="-1"><code>on:eventname={handler}</code> <a class="header-anchor" href="#on-eventname-handler" aria-label="Permalink to &quot;\`on:eventname={handler}\`&quot;">​</a></h3><blockquote><p><strong>Create an Event</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createEventDispatcher } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;svelte&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dispatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createEventDispatcher</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createEventDispatcher } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;svelte&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dispatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createEventDispatcher</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div></blockquote><h3 id="style-props" tabindex="-1"><code>--style-props</code> <a class="header-anchor" href="#style-props" aria-label="Permalink to &quot;\`--style-props\`&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">Slider</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">bind:value</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{0}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">--rail-color</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;black&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">--track-color</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;rgb(0, 0, 255)&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">/&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">Slider</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">bind:value</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{0}&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">--rail-color</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;black&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">--track-color</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;rgb(0, 0, 255)&quot;</span></span>
<span class="line"><span style="color:#24292E;">/&gt;</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;display: contents; --rail-color: black; --track-color: rgb(0, 0, 255)&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;display: contents; --rail-color: black; --track-color: rgb(0, 0, 255)&quot;</span></span>
<span class="line"><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="bind-property" tabindex="-1"><code>bind:property</code> <a class="header-anchor" href="#bind-property" aria-label="Permalink to &quot;\`bind:property\`&quot;">​</a></h3><blockquote><p>While Svelte props are reactive without binding, that reactivity only flows downward into the component by default. Using <code>bind:property</code> allows changes to the property from within the component to flow back up out of the component.</p></blockquote><h3 id="bind-this" tabindex="-1"><code>bind:this</code> <a class="header-anchor" href="#bind-this" aria-label="Permalink to &quot;\`bind:this\`&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">ShoppingCart</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bind:this</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{cart}&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">ShoppingCart</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bind:this</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{cart}&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><blockquote><p>Allows referencing to a component, like a ref in React.</p></blockquote><h2 id="slots" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#slot" target="_blank" rel="noreferrer">Slots</a> <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;[Slots](https://svelte.dev/docs/special-elements#slot)&quot;">​</a></h2><h3 id="slot" tabindex="-1"><code>&lt;slot /&gt;</code> <a class="header-anchor" href="#slot" aria-label="Permalink to &quot;\`&lt;slot /&gt;\`&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#6A737D;">&lt;!-- optional fallback --&gt;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#6A737D;">&lt;!-- optional fallback --&gt;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prop</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{value}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;">&gt;</span><span style="color:#6A737D;">&lt;!-- optional fallback --&gt;</span><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">slot</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">&gt;</span><span style="color:#6A737D;">&lt;!-- optional fallback --&gt;</span><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">slot</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prop</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{value}&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="slot-name-name" tabindex="-1"><code>&lt;slot name=&#39;name&#39;&gt;</code> <a class="header-anchor" href="#slot-name-name" aria-label="Permalink to &quot;\`&lt;slot name=&#39;name&#39;&gt;\`&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- Widget.svelte --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#E1E4E8;">&gt;No header was provided&lt;/</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;Some content between header and footer&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;footer&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- App.svelte --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">Widget</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">slot</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#E1E4E8;">&gt;Hello&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">slot</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;footer&quot;</span><span style="color:#E1E4E8;">&gt;Copyright (c) 2019 Svelte Industries&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#FDAEB7;font-style:italic;">Widget</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- Widget.svelte --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#24292E;">&gt;No header was provided&lt;/</span><span style="color:#22863A;">slot</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;Some content between header and footer&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;footer&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- App.svelte --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">Widget</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#24292E;">&gt;Hello&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;footer&quot;</span><span style="color:#24292E;">&gt;Copyright (c) 2019 Svelte Industries&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#B31D28;font-style:italic;">Widget</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><blockquote><p>Components can be placed in a named slot using the syntax <code>&lt;Component slot=&quot;name&quot; /&gt;</code>. In order to place content in a slot <em>without</em> using a wrapper element, you can use the special element <code>&lt;svelte:fragment&gt;</code>.</p></blockquote><h3 id="slots-1" tabindex="-1"><code>$$slots</code> <a class="header-anchor" href="#slots-1" aria-label="Permalink to &quot;\`$$slots\`&quot;">​</a></h3><p><code>$$slots</code> is an object whose keys are the names of the slots passed into the component by the parent. If the parent does not pass in a slot with a particular name, that name will not be present in <code>$$slots</code>. This allows components to render a slot (and other elements, like wrappers for styling) only if the parent provides it.</p><p>Note that explicitly passing in an empty named slot will add that slot&#39;s name to <code>$$slots</code>. For example, if a parent passes <code>&lt;div slot=&quot;title&quot; /&gt;</code> to a child component, <code>$$slots.title</code> will be truthy within the child.</p><h3 id="slot-key-value" tabindex="-1"><code>&lt;slot key=value&gt;</code> <a class="header-anchor" href="#slot-key-value" aria-label="Permalink to &quot;\`&lt;slot key=value&gt;\`&quot;">​</a></h3><p>Slots can be rendered zero or more times and can pass values <em>back</em> to the parent using props. The parent exposes the values to the slot template using the <code>let:</code> directive.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- FancyList.svelte --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	{#each items as item}</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;fancy&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prop</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{item}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	{/each}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- App.svelte --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">FancyList</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">{items}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">let:prop</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{thing}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;{thing.text}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#FDAEB7;font-style:italic;">FancyList</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- FancyList.svelte --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">ul</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	{#each items as item}</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">li</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;fancy&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prop</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{item}&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">li</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	{/each}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">ul</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- App.svelte --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">FancyList</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">{items}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">let:prop</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{thing}&quot;</span></span>
<span class="line"><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;{thing.text}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#B31D28;font-style:italic;">FancyList</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="svelte-components" tabindex="-1">Svelte Components <a class="header-anchor" href="#svelte-components" aria-label="Permalink to &quot;Svelte Components&quot;">​</a></h2><h3 id="svelte-self" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-self" target="_blank" rel="noreferrer"><code>&lt;svelte:self&gt;</code></a> <a class="header-anchor" href="#svelte-self" aria-label="Permalink to &quot;[\`&lt;svelte:self&gt;\`](https://svelte.dev/docs/special-elements#svelte-self)&quot;">​</a></h3><p>The <code>&lt;svelte:self&gt;</code> element allows a component to include itself, recursively. It cannot appear at the top level of your markup; it must be inside an if or each block or passed to a component&#39;s slot to prevent an infinite loop.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/** @type {number} */</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> count;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{#if count &gt; 0}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;counting down... {count}&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:self</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{count&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">-</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">1}</span></span>
<span class="line"><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{:else}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;lift-off!&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{/if}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/** @type {number} */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> count;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{#if count &gt; 0}</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;counting down... {count}&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:self</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{count&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">-</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">1}</span></span>
<span class="line"><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">{:else}</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;lift-off!&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{/if}</span></span></code></pre></div><h3 id="svelte-component" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-component" target="_blank" rel="noreferrer"><code>&lt;svelte:component&gt;</code></a> <a class="header-anchor" href="#svelte-component" aria-label="Permalink to &quot;[\`&lt;svelte:component&gt;\`](https://svelte.dev/docs/special-elements#svelte-component)&quot;">​</a></h3><p>The <code>&lt;svelte:component&gt;</code> element renders a <strong>COMPONENT</strong> dynamically, using the component constructor specified as the <code>this</code> property. When the property changes, the component is destroyed and recreated.</p><p>If <code>this</code> is falsy, no component is rendered.</p><h3 id="svelte-element" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-element" target="_blank" rel="noreferrer"><code>&lt;svelte:element&gt;</code></a> <a class="header-anchor" href="#svelte-element" aria-label="Permalink to &quot;[\`&lt;svelte:element&gt;\`](https://svelte.dev/docs/special-elements#svelte-element)&quot;">​</a></h3><p>The <code>&lt;svelte:element&gt;</code> element lets you render an <strong>ELEMENT</strong> of a <strong>DYNAMICALLY SPECIFIED TYPE</strong>. This is useful for example when displaying rich text content from a CMS. Any properties and event listeners present will be applied to the element.</p><h3 id="svelte-window" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-window" target="_blank" rel="noreferrer"><code>&lt;svelte:window&gt;</code></a> <a class="header-anchor" href="#svelte-window" aria-label="Permalink to &quot;[\`&lt;svelte:window&gt;\`](https://svelte.dev/docs/special-elements#svelte-window)&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:window</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on:event</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{handler}&quot;</span><span style="color:#E1E4E8;"> /&gt; &lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:window</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bind:prop</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{value}&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:window</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on:event</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{handler}&quot;</span><span style="color:#24292E;"> /&gt; &lt;</span><span style="color:#B31D28;font-style:italic;">svelte:window</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bind:prop</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{value}&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>The <code>&lt;svelte:window&gt;</code> element allows you to add event listeners to the <code>window</code> object without worrying about removing them when the component is destroyed, or checking for the existence of <code>window</code> when server-side rendering.</p><p>Unlike <code>&lt;svelte:self&gt;</code>, this element may only appear at the top level of your component and must never be inside a block or element.</p><h3 id="svelte-document" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-document" target="_blank" rel="noreferrer"><code>&lt;svelte:document&gt;</code></a> <a class="header-anchor" href="#svelte-document" aria-label="Permalink to &quot;[\`&lt;svelte:document&gt;\`](https://svelte.dev/docs/special-elements#svelte-document)&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:document</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on:event</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{handler}&quot;</span><span style="color:#E1E4E8;"> /&gt; &lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:document</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bind:prop</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{value}&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:document</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on:event</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{handler}&quot;</span><span style="color:#24292E;"> /&gt; &lt;</span><span style="color:#B31D28;font-style:italic;">svelte:document</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bind:prop</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{value}&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>Similarly to <code>&lt;svelte:window&gt;</code>, this element allows you to add listeners to events on <code>document</code>, such as <code>visibilitychange</code>, which don&#39;t fire on <code>window</code>. It also lets you use <a href="https://svelte.dev/docs/element-directives#use-action" target="_blank" rel="noreferrer">actions</a> on <code>document</code>.</p><p>As with <code>&lt;svelte:window&gt;</code>, this element may only appear the top level of your component and must never be inside a block or element.</p><h3 id="svelte-body" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-body" target="_blank" rel="noreferrer"><code>&lt;svelte:body&gt;</code></a> <a class="header-anchor" href="#svelte-body" aria-label="Permalink to &quot;[\`&lt;svelte:body&gt;\`](https://svelte.dev/docs/special-elements#svelte-body)&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:body</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on:event</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{handler}&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:body</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on:event</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{handler}&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>Similarly to <code>&lt;svelte:window&gt;</code>, this element allows you to add listeners to events on <code>document.body</code>, such as <code>mouseenter</code> and <code>mouseleave</code>, which don&#39;t fire on <code>window</code>. It also lets you use <a href="https://svelte.dev/docs/element-directives#use-action" target="_blank" rel="noreferrer">actions</a> on the <code>&lt;body&gt;</code> element.</p><p>As with <code>&lt;svelte:window&gt;</code> and <code>&lt;svelte:document&gt;</code>, this element may only appear the top level of your component and must never be inside a block or element.</p><h3 id="svelte-head" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-head" target="_blank" rel="noreferrer"><code>&lt;svelte:head&gt;</code></a> <a class="header-anchor" href="#svelte-head" aria-label="Permalink to &quot;[\`&lt;svelte:head&gt;\`](https://svelte.dev/docs/special-elements#svelte-head)&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:head</span></span>
<span class="line"><span style="color:#E1E4E8;">	&gt;...&lt;/</span><span style="color:#FDAEB7;font-style:italic;">svelte:head</span></span>
<span class="line"><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:head</span></span>
<span class="line"><span style="color:#24292E;">	&gt;...&lt;/</span><span style="color:#B31D28;font-style:italic;">svelte:head</span></span>
<span class="line"><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>This element makes it possible to insert elements into <code>document.head</code>. During server-side rendering, <code>head</code> content is exposed separately to the main <code>html</code> content.</p><p>As with <code>&lt;svelte:window&gt;</code>, <code>&lt;svelte:document&gt;</code> and <code>&lt;svelte:body&gt;</code>, this element may only appear at the top level of your component and must never be inside a block or element.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;Hello world!&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">meta</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;description&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;This is where the description goes for SEO&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#FDAEB7;font-style:italic;">svelte:head</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;Hello world!&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">meta</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;description&quot;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;This is where the description goes for SEO&quot;</span></span>
<span class="line"><span style="color:#24292E;">	/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#B31D28;font-style:italic;">svelte:head</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="svelte-options" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-options" target="_blank" rel="noreferrer"><code>&lt;svelte:options&gt;</code></a> <a class="header-anchor" href="#svelte-options" aria-label="Permalink to &quot;[\`&lt;svelte:options&gt;\`](https://svelte.dev/docs/special-elements#svelte-options)&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:options</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{value}&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:options</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{value}&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>The <code>&lt;svelte:options&gt;</code> element provides a place to specify per-component compiler options, which are detailed in the <a href="https://svelte.dev/docs/svelte-compiler#compile" target="_blank" rel="noreferrer">compiler section</a>. The possible options are:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:options</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customElement</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;my-custom-element&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:options</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customElement</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;my-custom-element&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><h3 id="svelte-fragment" tabindex="-1"><a href="https://svelte.dev/docs/special-elements#svelte-fragment" target="_blank" rel="noreferrer"><code>&lt;svelte:fragment&gt;</code></a> <a class="header-anchor" href="#svelte-fragment" aria-label="Permalink to &quot;[\`&lt;svelte:fragment&gt;\`](https://svelte.dev/docs/special-elements#svelte-fragment)&quot;">​</a></h3><p>The <code>&lt;svelte:fragment&gt;</code> element allows you to place content in a <a href="https://svelte.dev/docs/special-elements#slot-slot-name-name" target="_blank" rel="noreferrer">named slot</a> without wrapping it in a container DOM element. This keeps the flow layout of your document intact.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- Widget.svelte --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#E1E4E8;">&gt;No header was provided&lt;/</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;Some content between header and footer&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">slot</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;footer&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- App.svelte --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">Widget</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">slot</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#E1E4E8;">&gt;Hello&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#FDAEB7;font-style:italic;">svelte:fragment</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">slot</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;footer&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;All rights reserved.&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;Copyright (c) 2019 Svelte Industries&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#FDAEB7;font-style:italic;">svelte:fragment</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#FDAEB7;font-style:italic;">Widget</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- Widget.svelte --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#24292E;">&gt;No header was provided&lt;/</span><span style="color:#22863A;">slot</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;Some content between header and footer&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">slot</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;footer&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- App.svelte --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">Widget</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#24292E;">&gt;Hello&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#B31D28;font-style:italic;">svelte:fragment</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;footer&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;All rights reserved.&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;Copyright (c) 2019 Svelte Industries&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#B31D28;font-style:italic;">svelte:fragment</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#B31D28;font-style:italic;">Widget</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,57);function y(d,h,g,v,u,m){const s=n("center");return a(),e("div",null,[t(s,null,{default:o(()=>[E]),_:1}),i])}const F=l(r,[["render",y]]);export{f as __pageData,F as default};
